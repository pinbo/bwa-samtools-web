#MACOS = -D MACOS 


CC_EXEC = emcc
OPT_LEVEL = 3
AR = emar

include makefile.version
-include ~/.R/DBPZ_debug_makefile

CCFLAGS = ${MACOS} -O${OPT_LEVEL} -DMAKE_FOR_EXON -D MAKE_STANDALONE -D SUBREAD_VERSION=\"${SUBREAD_VERSION}\" #-D_FILE_OFFSET_BITS=64 ${WARNING_LEVEL} # bit64 gives errors while running # make for exon cannot be disabled
LDFLAGS = ${STATIC_MAKE} -pthread -lz ${MACOS} -O${OPT_LEVEL} -D MAKE_STANDALONE -lm -DMAKE_FOR_EXON
CC = ${CC_EXEC}  ${CCFLAGS} -fmessage-length=0  -ggdb


ALL_LIBS= core core-junction core-indel sambam-file sublog gene-algorithms hashtable input-files sorted-hashtable gene-value-index exon-algorithms HelperFunctions interval_merge long-hashtable core-bigtable seek-zlib input-blc
ALL_OBJECTS=$(addsuffix .o, ${ALL_LIBS})
ALL_H=$(addsuffix .h, ${ALL_LIBS})
ALL_C=$(addsuffix .c, ${ALL_LIBS})

# all: genRandomReads detectionCall sublong repair txUnique featureCounts removeDup exactSNP subread-buildindex subindel  subread-align subjunc qualityScores subread-fullscan propmapped flattenGTF # samMappedBases mergeVCF  testZlib
all: subread-buildindex.o subread-align.o exactSNP.o libexactSNP.a
	mkdir -p ../bin/utilities
	# mv longread-one/LRM longread-one/sublong
	mv subread-align.o subread-buildindex.o exactSNP.o ../bin/
	# mv detectionCall genRandomReads repair propmapped qualityScores removeDup subread-fullscan txUnique flattenGTF ../bin/utilities
	@echo
	@echo "###########################################################"
	@echo "#                                                         #"
	@echo "#  Installation successfully completed.                   #"
	@echo "#                                                         #"
	@echo "#  Generated executables were copied to directory ../bin/ #"
	@echo "#                                                         #"
	@echo "###########################################################"
	@echo

# sublong: longread-one/longread-mapping.c  ${ALL_OBJECTS}
# 	echo " " > longread-one/make.version
# 	rm -f longread-one/*.o
# 	cd longread-one && $(MAKE)

# genRandomReads: gen_rand_reads.c ${ALL_OBJECTS}
# 	${CC} -o genRandomReads gen_rand_reads.c ${ALL_OBJECTS} ${LDFLAGS}

# flattenGTF: flattenAnnotations.c ${ALL_OBJECTS}
# 	${CC} -o flattenGTF flattenAnnotations.c  ${ALL_OBJECTS} ${LDFLAGS}

# detectionCall: detection-calls.c	 ${ALL_OBJECTS}
# 	${CC} -o detectionCall detection-calls.c  ${ALL_OBJECTS} ${LDFLAGS}

# repair: read-repair.c	 ${ALL_OBJECTS}
# 	${CC} -o repair read-repair.c  ${ALL_OBJECTS} ${LDFLAGS}

# txUnique: tx-unique.c tx-unique.h	 ${ALL_OBJECTS}
# 	${CC} -o txUnique tx-unique.c  ${ALL_OBJECTS} ${LDFLAGS}

# globalReassembly: global-reassembly.c ${ALL_OBJECTS}
# 	${CC} -o globalReassembly  global-reassembly.c ${ALL_OBJECTS} ${LDFLAGS}

# propmapped: propmapped.c ${ALL_OBJECTS}
# 	${CC} -o propmapped propmapped.c ${ALL_OBJECTS} ${LDFLAGS}

exactSNP.o: SNPCalling.c SNPCalling.h  ${ALL_OBJECTS}
	${CC} -r -o exactSNP.o SNPCalling.c  ${ALL_OBJECTS} ${LDFLAGS}

libexactSNP.a: SNPCalling.c SNPCalling.h  ${ALL_OBJECTS}
	${CC} -c -o SNPCalling.o SNPCalling.c ${LDFLAGS} -D WASM_LIB
	${AR} csr libexactSNP.a SNPCalling.o  ${ALL_OBJECTS}

subread-buildindex.o: index-builder.c subread.h ${ALL_OBJECTS}
	${CC} -r -o subread-buildindex.o  index-builder.c ${ALL_OBJECTS} ${LDFLAGS}

# removeDup: removeDupReads.c removeDupReads.h subread.h ${ALL_OBJECTS}
# 	${CC} -o  removeDup removeDupReads.c  ${ALL_OBJECTS} ${LDFLAGS}

# subindel: SUBindel.c core.h subread.h  ${ALL_OBJECTS}
# 	${CC} -o subindel SUBindel.c ${ALL_OBJECTS} ${LDFLAGS}

# featureCounts: readSummary.c subread.h  ${ALL_OBJECTS}
# 	${CC} -o featureCounts readSummary.c ${ALL_OBJECTS} ${LDFLAGS}

subread-align.o: core-interface-aligner.c  ${ALL_OBJECTS}
	${CC} -r -o subread-align.o core-interface-aligner.c  ${ALL_OBJECTS} ${LDFLAGS} 

# subjunc: core-interface-subjunc.c  ${ALL_OBJECTS}
# 	${CC} -o subjunc core-interface-subjunc.c  ${ALL_OBJECTS} ${LDFLAGS} 

# subtools: subtools.c ${ALL_OBJECTS}
# 	${CC} -o subtools subtools.c ${ALL_OBJECTS} ${LDFLAGS} 

# qualityScores: qualityScores.c ${ALL_OBJECTS}
# 	${CC} -o qualityScores qualityScores.c  ${ALL_OBJECTS}  ${LDFLAGS}

# subread-fullscan: fullscan.c  ${ALL_OBJECTS}
# 	${CC} -o subread-fullscan fullscan.c  ${ALL_OBJECTS}  ${LDFLAGS}

clean:
	rm -f core featureCounts exactSNP removeDup subread-buildindex ${ALL_OBJECTS}
