diff --git a/Tool_src/samtools-1.11/Makefile b/Tool_src/samtools-1.11/Makefile
index c880c47..0ad527b 100644
--- a/Tool_src/samtools-1.11/Makefile
+++ b/Tool_src/samtools-1.11/Makefile
@@ -38,15 +38,16 @@ LZ4_LDFLAGS  = -L$(LZ4DIR)
 
 LOBJS=      bam_aux.o bam.o sam.o \
             bam_plbuf.o
-AOBJS=      bam_index.o bam_plcmd.o sam_view.o bam_fastq.o \
-            bam_cat.o bam_md.o bam_reheader.o bam_sort.o \
-            bam_rmdup.o bam_rmdupse.o bam_mate.o bam_stat.o bam_color.o \
-            bamtk.o bam2bcf.o bam2bcf_indel.o sample.o \
-            cut_target.o phase.o bam2depth.o coverage.o padding.o bedcov.o bamshuf.o \
-            faidx.o dict.o stats.o stats_isize.o bam_flags.o bam_split.o \
-            bam_tview.o bam_tview_curses.o bam_tview_html.o bam_lpileup.o \
-            bam_quickcheck.o bam_addrprg.o bam_markdup.o tmp_file.o \
-	    bam_ampliconclip.o amplicon_stats.o
+#AOBJS=      bam_index.o bam_plcmd.o sam_view.o bam_fastq.o \
+#            bam_cat.o bam_md.o bam_reheader.o bam_sort.o \
+#            bam_rmdup.o bam_rmdupse.o bam_mate.o bam_stat.o bam_color.o \
+#            bamtk.o bam2bcf.o bam2bcf_indel.o sample.o \
+#            cut_target.o phase.o bam2depth.o coverage.o padding.o bedcov.o bamshuf.o \
+#            faidx.o dict.o stats.o stats_isize.o bam_flags.o bam_split.o \
+#            bam_tview.o bam_tview_curses.o bam_tview_html.o bam_lpileup.o \
+#            bam_quickcheck.o bam_addrprg.o bam_markdup.o tmp_file.o \
+#	    bam_ampliconclip.o amplicon_stats.o
+AOBJS=      bam_index.o bam_sort.o bamtk.o sam_view.o
 LZ4OBJS  =  $(LZ4DIR)/lz4.o
 
 prefix      = /usr/local
@@ -68,7 +69,7 @@ INSTALL_PROGRAM = $(INSTALL)
 INSTALL_SCRIPT  = $(INSTALL_PROGRAM)
 
 
-PROGRAMS = samtools
+PROGRAMS = samtools.o
 
 MISC_PROGRAMS = \
 	misc/ace2sam misc/maq2sam-long misc/maq2sam-short \
@@ -142,8 +143,8 @@ lib:libbam.a
 libbam.a:$(LOBJS)
 	$(AR) -csru $@ $(LOBJS)
 
-samtools: $(AOBJS) $(LZ4OBJS) libbam.a libst.a $(HTSLIB)
-	$(CC) $(ALL_LDFLAGS) -o $@ $(AOBJS) $(LZ4OBJS) libbam.a libst.a $(HTSLIB_LIB) $(CURSES_LIB) -lm $(ALL_LIBS) -lpthread
+samtools.o: $(AOBJS) $(LZ4OBJS) libbam.a libst.a $(HTSLIB)
+	$(CC) -r $(ALL_LDFLAGS) -o $@ $(AOBJS) $(LZ4OBJS) libbam.a libst.a $(HTSLIB_LIB) $(CURSES_LIB) -lm $(ALL_LIBS) -lpthread
 
 # For building samtools and its test suite only: NOT to be installed.
 libst.a: $(LIBST_OBJS)
diff --git a/Tool_src/samtools-1.11/bam_sort.c b/Tool_src/samtools-1.11/bam_sort.c
index 777e9d4..392138e 100644
--- a/Tool_src/samtools-1.11/bam_sort.c
+++ b/Tool_src/samtools-1.11/bam_sort.c
@@ -2336,16 +2336,17 @@ static int sort_blocks(int n_files, size_t k, bam1_tag *buf, const char *prefix,
             w[i].no_save = 0;
         }
         pos += w[i].buf_len; rest -= w[i].buf_len;
-        pthread_create(&tid[i], &attr, worker, &w[i]);
-    }
-    for (i = 0; i < n_threads; ++i) {
-        pthread_join(tid[i], 0);
-        if (w[i].error != 0) {
-            errno = w[i].error;
-            print_error_errno("sort", "failed to create temporary file \"%s.%.4d.bam\"", prefix, w[i].index);
-            n_failed++;
-        }
-    }
+        // pthread_create(&tid[i], &attr, worker, &w[i]);
+        worker(&w[0]);
+    }
+    // for (i = 0; i < n_threads; ++i) {
+    //     pthread_join(tid[i], 0);
+    //     if (w[i].error != 0) {
+    //         errno = w[i].error;
+    //         print_error_errno("sort", "failed to create temporary file \"%s.%.4d.bam\"", prefix, w[i].index);
+    //         n_failed++;
+    //     }
+    // }
     free(tid); free(w);
     if (n_failed) return -1;
     if (in_mem) return n_threads;
@@ -2674,17 +2675,18 @@ int bam_sort(int argc, char *argv[])
         case '?': sort_usage(stderr); ret = EXIT_FAILURE; goto sort_end;
         }
     }
-
+    
     nargs = argc - optind;
     if (nargs == 0 && isatty(STDIN_FILENO)) {
         sort_usage(stdout);
         ret = EXIT_SUCCESS;
         goto sort_end;
     }
-    else if (nargs >= 2) {
+    else if (nargs == 2) {fnout = argv[optind + 1];} // junli added to save output name}
+    else if (nargs >= 3) {
         // If exactly two, user probably tried to specify legacy <out.prefix>
-        if (nargs == 2)
-            fprintf(stderr, "[bam_sort] Use -T PREFIX / -o FILE to specify temporary and final output files\n");
+        // if (nargs == 2)
+        //     fprintf(stderr, "[bam_sort] Use -T PREFIX / -o FILE to specify temporary and final output files\n");
 
         sort_usage(stderr);
         ret = EXIT_FAILURE;
diff --git a/Tool_src/samtools-1.11/bamtk.c b/Tool_src/samtools-1.11/bamtk.c
index 852a7b6..66408b9 100644
--- a/Tool_src/samtools-1.11/bamtk.c
+++ b/Tool_src/samtools-1.11/bamtk.c
@@ -33,39 +33,39 @@ DEALINGS IN THE SOFTWARE.  */
 #include "samtools.h"
 #include "version.h"
 
-int bam_taf2baf(int argc, char *argv[]);
-int bam_mpileup(int argc, char *argv[]);
-int bam_merge(int argc, char *argv[]);
+// int bam_taf2baf(int argc, char *argv[]);
+// int bam_mpileup(int argc, char *argv[]);
+// int bam_merge(int argc, char *argv[]);
 int bam_index(int argc, char *argv[]);
 int bam_sort(int argc, char *argv[]);
-int bam_tview_main(int argc, char *argv[]);
-int bam_mating(int argc, char *argv[]);
-int bam_rmdup(int argc, char *argv[]);
-int bam_flagstat(int argc, char *argv[]);
-int bam_fillmd(int argc, char *argv[]);
-int bam_idxstats(int argc, char *argv[]);
-int bam_markdup(int argc, char *argv[]);
+// int bam_tview_main(int argc, char *argv[]);
+// int bam_mating(int argc, char *argv[]);
+// int bam_rmdup(int argc, char *argv[]);
+// int bam_flagstat(int argc, char *argv[]);
+// int bam_fillmd(int argc, char *argv[]);
+// int bam_idxstats(int argc, char *argv[]);
+// int bam_markdup(int argc, char *argv[]);
 int main_samview(int argc, char *argv[]);
-int main_reheader(int argc, char *argv[]);
-int main_cut_target(int argc, char *argv[]);
-int main_phase(int argc, char *argv[]);
-int main_cat(int argc, char *argv[]);
-int main_depth(int argc, char *argv[]);
-int main_coverage(int argc, char *argv[]);
-int main_bam2fq(int argc, char *argv[]);
-int main_pad2unpad(int argc, char *argv[]);
-int main_bedcov(int argc, char *argv[]);
-int main_bamshuf(int argc, char *argv[]);
-int main_stats(int argc, char *argv[]);
-int main_flags(int argc, char *argv[]);
-int main_split(int argc, char *argv[]);
-int main_quickcheck(int argc, char *argv[]);
-int main_addreplacerg(int argc, char *argv[]);
-int faidx_main(int argc, char *argv[]);
-int dict_main(int argc, char *argv[]);
-int fqidx_main(int argc, char *argv[]);
-int amplicon_clip_main(int argc, char *argv[]);
-int main_ampliconstats(int argc, char *argv[]);
+// int main_reheader(int argc, char *argv[]);
+// int main_cut_target(int argc, char *argv[]);
+// int main_phase(int argc, char *argv[]);
+// int main_cat(int argc, char *argv[]);
+// int main_depth(int argc, char *argv[]);
+// int main_coverage(int argc, char *argv[]);
+// int main_bam2fq(int argc, char *argv[]);
+// int main_pad2unpad(int argc, char *argv[]);
+// int main_bedcov(int argc, char *argv[]);
+// int main_bamshuf(int argc, char *argv[]);
+// int main_stats(int argc, char *argv[]);
+// int main_flags(int argc, char *argv[]);
+// int main_split(int argc, char *argv[]);
+// int main_quickcheck(int argc, char *argv[]);
+// int main_addreplacerg(int argc, char *argv[]);
+// int faidx_main(int argc, char *argv[]);
+// int dict_main(int argc, char *argv[]);
+// int fqidx_main(int argc, char *argv[]);
+// int amplicon_clip_main(int argc, char *argv[]);
+// int main_ampliconstats(int argc, char *argv[]);
 
 const char *samtools_version()
 {
@@ -85,46 +85,11 @@ static void usage(FILE *fp)
 "\n"
 "Commands:\n"
 "  -- Indexing\n"
-"     dict           create a sequence dictionary file\n"
-"     faidx          index/extract FASTA\n"
-"     fqidx          index/extract FASTQ\n"
 "     index          index alignment\n"
-"\n"
-"  -- Editing\n"
-"     calmd          recalculate MD/NM tags and '=' bases\n"
-"     fixmate        fix mate information\n"
-"     reheader       replace BAM header\n"
-"     targetcut      cut fosmid regions (for fosmid pool only)\n"
-"     addreplacerg   adds or replaces RG tags\n"
-"     markdup        mark duplicates\n"
-"     ampliconclip   clip oligos from the end of reads\n"
+
 "\n"
 "  -- File operations\n"
-"     collate        shuffle and group alignments by name\n"
-"     cat            concatenate BAMs\n"
-"     merge          merge sorted alignments\n"
-"     mpileup        multi-way pileup\n"
 "     sort           sort alignment file\n"
-"     split          splits a file by read group\n"
-"     quickcheck     quickly check if SAM/BAM/CRAM file appears intact\n"
-"     fastq          converts a BAM to a FASTQ\n"
-"     fasta          converts a BAM to a FASTA\n"
-"\n"
-"  -- Statistics\n"
-"     bedcov         read depth per BED region\n"
-"     coverage       alignment depth and percent coverage\n"
-"     depth          compute the depth\n"
-"     flagstat       simple stats\n"
-"     idxstats       BAM index stats\n"
-"     phase          phase heterozygotes\n"
-"     stats          generate stats (former bamcheck)\n"
-"     ampliconstats  generate amplicon specific stats\n"
-"\n"
-"  -- Viewing\n"
-"     flags          explain BAM flags\n"
-"     tview          text alignment viewer\n"
-"     view           SAM<->BAM<->CRAM conversion\n"
-"     depad          convert padded BAM to unpadded BAM\n"
 "\n");
 }
 
@@ -140,10 +105,10 @@ static void usage(FILE *fp)
 int _CRT_glob = 0;
 #endif
 
-static void bam_import_err(void) {
-    fprintf(stderr, "[main] \"samtools import\" has been removed. "
-            "Please use \"samtools view\" instead.\n");
-}
+// static void bam_import_err(void) {
+//     fprintf(stderr, "[main] \"samtools import\" has been removed. "
+//             "Please use \"samtools view\" instead.\n");
+// }
 
 int main(int argc, char *argv[])
 {
@@ -163,53 +128,53 @@ int main(int argc, char *argv[])
         argc = 2;
     }
 
-    int ret = 0;
+    int ret = 0; optind = 1; opterr = 1; optopt = 0;
     if (strcmp(argv[1], "view") == 0)           ret = main_samview(argc-1, argv+1);
-    else if (strcmp(argv[1], "import") == 0)    { bam_import_err(); return 1; }
-    else if (strcmp(argv[1], "mpileup") == 0)   ret = bam_mpileup(argc-1, argv+1);
-    else if (strcmp(argv[1], "merge") == 0)     ret = bam_merge(argc-1, argv+1);
+    // else if (strcmp(argv[1], "import") == 0)    { bam_import_err(); return 1; }
+    // else if (strcmp(argv[1], "mpileup") == 0)   ret = bam_mpileup(argc-1, argv+1);
+    // else if (strcmp(argv[1], "merge") == 0)     ret = bam_merge(argc-1, argv+1);
     else if (strcmp(argv[1], "sort") == 0)      ret = bam_sort(argc-1, argv+1);
     else if (strcmp(argv[1], "index") == 0)     ret = bam_index(argc-1, argv+1);
-    else if (strcmp(argv[1], "idxstat") == 0 ||
-             strcmp(argv[1], "idxstats") == 0)  ret = bam_idxstats(argc-1, argv+1);
-    else if (strcmp(argv[1], "faidx") == 0)     ret = faidx_main(argc-1, argv+1);
-    else if (strcmp(argv[1], "fqidx") == 0)     ret = fqidx_main(argc-1, argv+1);
-    else if (strcmp(argv[1], "dict") == 0)      ret = dict_main(argc-1, argv+1);
-    else if (strcmp(argv[1], "fixmate") == 0)   ret = bam_mating(argc-1, argv+1);
-    else if (strcmp(argv[1], "rmdup") == 0)     ret = bam_rmdup(argc-1, argv+1);
-    else if (strcmp(argv[1], "markdup") == 0)   ret = bam_markdup(argc-1, argv+1);
-    else if (strcmp(argv[1], "ampliconclip") == 0) ret = amplicon_clip_main(argc-1, argv+1);
-    else if (strcmp(argv[1], "flagstat") == 0 ||
-             strcmp(argv[1], "flagstats") == 0) ret = bam_flagstat(argc-1, argv+1);
-    else if (strcmp(argv[1], "calmd") == 0)     ret = bam_fillmd(argc-1, argv+1);
-    else if (strcmp(argv[1], "fillmd") == 0)    ret = bam_fillmd(argc-1, argv+1);
-    else if (strcmp(argv[1], "reheader") == 0)  ret = main_reheader(argc-1, argv+1);
-    else if (strcmp(argv[1], "cat") == 0)       ret = main_cat(argc-1, argv+1);
-    else if (strcmp(argv[1], "targetcut") == 0) ret = main_cut_target(argc-1, argv+1);
-    else if (strcmp(argv[1], "phase") == 0)     ret = main_phase(argc-1, argv+1);
-    else if (strcmp(argv[1], "depth") == 0)     ret = main_depth(argc-1, argv+1);
-    else if (strcmp(argv[1], "coverage") == 0)  ret = main_coverage(argc-1, argv+1);
-    else if (strcmp(argv[1], "bam2fq") == 0 ||
-             strcmp(argv[1], "fastq") == 0 ||
-             strcmp(argv[1], "fasta") == 0)     ret = main_bam2fq(argc-1, argv+1);
-    else if (strcmp(argv[1], "pad2unpad") == 0) ret = main_pad2unpad(argc-1, argv+1);
-    else if (strcmp(argv[1], "depad") == 0)     ret = main_pad2unpad(argc-1, argv+1);
-    else if (strcmp(argv[1], "bedcov") == 0)    ret = main_bedcov(argc-1, argv+1);
-    else if (strcmp(argv[1], "bamshuf") == 0)   ret = main_bamshuf(argc-1, argv+1);
-    else if (strcmp(argv[1], "collate") == 0)   ret = main_bamshuf(argc-1, argv+1);
-    else if (strcmp(argv[1], "stat") == 0 ||
-             strcmp(argv[1], "stats") == 0)     ret = main_stats(argc-1, argv+1);
-    else if (strcmp(argv[1], "flag") == 0 ||
-             strcmp(argv[1], "flags") == 0)     ret = main_flags(argc-1, argv+1);
-    else if (strcmp(argv[1], "split") == 0)     ret = main_split(argc-1, argv+1);
-    else if (strcmp(argv[1], "quickcheck") == 0)  ret = main_quickcheck(argc-1, argv+1);
-    else if (strcmp(argv[1], "addreplacerg") == 0) ret = main_addreplacerg(argc-1, argv+1);
-    else if (strcmp(argv[1], "pileup") == 0) {
-        fprintf(stderr, "[main] The `pileup' command has been removed. Please use `mpileup' instead.\n");
-        return 1;
-    }
-    else if (strcmp(argv[1], "tview") == 0)   ret = bam_tview_main(argc-1, argv+1);
-    else if (strcmp(argv[1], "ampliconstats") == 0)     ret = main_ampliconstats(argc-1, argv+1);
+    // else if (strcmp(argv[1], "idxstat") == 0 ||
+    //          strcmp(argv[1], "idxstats") == 0)  ret = bam_idxstats(argc-1, argv+1);
+    // else if (strcmp(argv[1], "faidx") == 0)     ret = faidx_main(argc-1, argv+1);
+    // else if (strcmp(argv[1], "fqidx") == 0)     ret = fqidx_main(argc-1, argv+1);
+    // else if (strcmp(argv[1], "dict") == 0)      ret = dict_main(argc-1, argv+1);
+    // else if (strcmp(argv[1], "fixmate") == 0)   ret = bam_mating(argc-1, argv+1);
+    // else if (strcmp(argv[1], "rmdup") == 0)     ret = bam_rmdup(argc-1, argv+1);
+    // else if (strcmp(argv[1], "markdup") == 0)   ret = bam_markdup(argc-1, argv+1);
+    // else if (strcmp(argv[1], "ampliconclip") == 0) ret = amplicon_clip_main(argc-1, argv+1);
+    // else if (strcmp(argv[1], "flagstat") == 0 ||
+    //          strcmp(argv[1], "flagstats") == 0) ret = bam_flagstat(argc-1, argv+1);
+    // else if (strcmp(argv[1], "calmd") == 0)     ret = bam_fillmd(argc-1, argv+1);
+    // else if (strcmp(argv[1], "fillmd") == 0)    ret = bam_fillmd(argc-1, argv+1);
+    // else if (strcmp(argv[1], "reheader") == 0)  ret = main_reheader(argc-1, argv+1);
+    // else if (strcmp(argv[1], "cat") == 0)       ret = main_cat(argc-1, argv+1);
+    // else if (strcmp(argv[1], "targetcut") == 0) ret = main_cut_target(argc-1, argv+1);
+    // else if (strcmp(argv[1], "phase") == 0)     ret = main_phase(argc-1, argv+1);
+    // else if (strcmp(argv[1], "depth") == 0)     ret = main_depth(argc-1, argv+1);
+    // else if (strcmp(argv[1], "coverage") == 0)  ret = main_coverage(argc-1, argv+1);
+    // else if (strcmp(argv[1], "bam2fq") == 0 ||
+    //          strcmp(argv[1], "fastq") == 0 ||
+    //          strcmp(argv[1], "fasta") == 0)     ret = main_bam2fq(argc-1, argv+1);
+    // else if (strcmp(argv[1], "pad2unpad") == 0) ret = main_pad2unpad(argc-1, argv+1);
+    // else if (strcmp(argv[1], "depad") == 0)     ret = main_pad2unpad(argc-1, argv+1);
+    // else if (strcmp(argv[1], "bedcov") == 0)    ret = main_bedcov(argc-1, argv+1);
+    // else if (strcmp(argv[1], "bamshuf") == 0)   ret = main_bamshuf(argc-1, argv+1);
+    // else if (strcmp(argv[1], "collate") == 0)   ret = main_bamshuf(argc-1, argv+1);
+    // else if (strcmp(argv[1], "stat") == 0 ||
+    //          strcmp(argv[1], "stats") == 0)     ret = main_stats(argc-1, argv+1);
+    // else if (strcmp(argv[1], "flag") == 0 ||
+    //          strcmp(argv[1], "flags") == 0)     ret = main_flags(argc-1, argv+1);
+    // else if (strcmp(argv[1], "split") == 0)     ret = main_split(argc-1, argv+1);
+    // else if (strcmp(argv[1], "quickcheck") == 0)  ret = main_quickcheck(argc-1, argv+1);
+    // else if (strcmp(argv[1], "addreplacerg") == 0) ret = main_addreplacerg(argc-1, argv+1);
+    // else if (strcmp(argv[1], "pileup") == 0) {
+    //     fprintf(stderr, "[main] The `pileup' command has been removed. Please use `mpileup' instead.\n");
+    //     return 1;
+    // }
+    // else if (strcmp(argv[1], "tview") == 0)   ret = bam_tview_main(argc-1, argv+1);
+    // else if (strcmp(argv[1], "ampliconstats") == 0)     ret = main_ampliconstats(argc-1, argv+1);
     else if (strcmp(argv[1], "--version") == 0) {
         printf(
 "samtools %s\n"
diff --git a/Tool_src/samtools-1.11/examples/00README.txt b/Tool_src/samtools-1.11/examples/00README.txt
deleted file mode 100644
index c12eefc..0000000
--- a/Tool_src/samtools-1.11/examples/00README.txt
+++ /dev/null
@@ -1,41 +0,0 @@
-File ex1.fa contains two sequences cut from the human genome
-build36. They were extracted with command:
-
-    samtools faidx human_b36.fa 2:2043966-2045540 20:67967-69550
-
-Sequence names were changed manually for simplicity. File ex1.sam.gz
-contains MAQ alignments extracted with:
-
-   (samtools view NA18507_maq.bam 2:2044001-2045500;
-    samtools view NA18507_maq.bam 20:68001-69500)
-
-and processed with `samtools fixmate' to make it self-consistent as a
-standalone alignment.
-
-To try samtools, you may run the following commands.
-
-Index the reference FASTA.
-    samtools faidx ex1.fa
-
-Convert the (headerless) SAM file to BAM.  Note if we had used
-"samtools view -h" above to create the ex1.sam.gz then we could omit the
-"-t ex1.fa.fai" option here.
-    samtools view -S -b -t ex1.fa.fai -o ex1.bam ex1.sam.gz
-
-Build an index for the BAM file:
-    samtools index ex1.bam
-
-View a portion of the BAM file:
-    samtools view ex1.bam seq2:450-550
-
-Visually inspect the alignments at the same location:
-    samtools tview -p seq2:450 ex1.bam ex1.fa
-
-View the data in pileup format:
-    samtools mpileup -f ex1.fa ex1.bam
-
-Generate an uncompressed VCF file of variants:
-    samtools mpileup -vu -f ex1.fa ex1.bam > ex1.vcf
-
-Generate a compressed VCF file of variants:
-    samtools mpileup -g -f ex1.fa ex1.bam > ex1.bcf
diff --git a/Tool_src/samtools-1.11/examples/ex1.fa b/Tool_src/samtools-1.11/examples/ex1.fa
deleted file mode 100644
index ef611b4..0000000
--- a/Tool_src/samtools-1.11/examples/ex1.fa
+++ /dev/null
@@ -1,56 +0,0 @@
->seq1
-CACTAGTGGCTCATTGTAAATGTGTGGTTTAACTCGTCCATGGCCCAGCATTAGGGAGCT
-GTGGACCCTGCAGCCTGGCTGTGGGGGCCGCAGTGGCTGAGGGGTGCAGAGCCGAGTCAC
-GGGGTTGCCAGCACAGGGGCTTAACCTCTGGTGACTGCCAGAGCTGCTGGCAAGCTAGAG
-TCCCATTTGGAGCCCCTCTAAGCCGTTCTATTTGTAATGAAAACTATATTTATGCTATTC
-AGTTCTAAATATAGAAATTGAAACAGCTGTGTTTAGTGCCTTTGTTCAACCCCCTTGCAA
-CAACCTTGAGAACCCCAGGGAATTTGTCAATGTCAGGGAAGGAGCATTTTGTCAGTTACC
-AAATGTGTTTATTACCAGAGGGATGGAGGGAAGAGGGACGCTGAAGAACTTTGATGCCCT
-CTTCTTCCAAAGATGAAACGCGTAACTGCGCTCTCATTCACTCCAGCTCCCTGTCACCCA
-ATGGACCTGTGATATCTGGATTCTGGGAAATTCTTCATCCTGGACCCTGAGAGATTCTGC
-AGCCCAGCTCCAGATTGCTTGTGGTCTGACAGGCTGCAACTGTGAGCCATCACAATGAAC
-AACAGGAAGAAAAGGTCTTTCAAAAGGTGATGTGTGTTCTCATCAACCTCATACACACAC
-ATGGTTTAGGGGTATAATACCTCTACATGGCTGATTATGAAAACAATGTTCCCCAGATAC
-CATCCCTGTCTTACTTCCAGCTCCCCAGAGGGAAAGCTTTCAACGCTTCTAGCCATTTCT
-TTTGGCATTTGCCTTCAGACCCTACACGAATGCGTCTCTACCACAGGGGGCTGCGCGGTT
-TCCCATCATGAAGCACTGAACTTCCACGTCTCATCTAGGGGAACAGGGAGGTGCACTAAT
-GCGCTCCACGCCCAAGCCCTTCTCACAGTTTCTGCCCCCAGCATGGTTGTACTGGGCAAT
-ACATGAGATTATTAGGAAATGCTTTACTGTCATAACTATGAAGAGACTATTGCCAGATGA
-ACCACACATTAATACTATGTTTCTTATCTGCACATTACTACCCTGCAATTAATATAATTG
-TGTCCATGTACACACGCTGTCCTATGTACTTATCATGACTCTATCCCAAATTCCCAATTA
-CGTCCTATCTTCTTCTTAGGGAAGAACAGCTTAGGTATCAATTTGGTGTTCTGTGTAAAG
-TCTCAGGGAGCCGTCCGTGTCCTCCCATCTGGCCTCGTCCACACTGGTTCTCTTGAAAGC
-TTGGGCTGTAATGATGCCCCTTGGCCATCACCCAGTCCCTGCCCCATCTCTTGTAATCTC
-TCTCCTTTTTGCTGCATCCCTGTCTTCCTCTGTCTTGATTTACTTGTTGTTGGTTTTCTG
-TTTCTTTGTTTGATTTGGTGGAAGACATAATCCCACGCTTCCTATGGAAAGGTTGTTGGG
-AGATTTTTAATGATTCCTCAATGTTAAAATGTCTATTTTTGTCTTGACACCCAACTAATA
-TTTGTCTGAGCAAAACAGTCTAGATGAGAGAGAACTTCCCTGGAGGTCTGATGGCGTTTC
-TCCCTCGTCTTCTTA
->seq2
-TTCAAATGAACTTCTGTAATTGAAAAATTCATTTAAGAAATTACAAAATATAGTTGAAAG
-CTCTAACAATAGACTAAACCAAGCAGAAGAAAGAGGTTCAGAACTTGAAGACAAGTCTCT
-TATGAATTAACCCAGTCAGACAAAAATAAAGAAAAAAATTTTAAAAATGAACAGAGCTTT
-CAAGAAGTATGAGATTATGTAAAGTAACTGAACCTATGAGTCACAGGTATTCCTGAGGAA
-AAAGAAAAAGTGAGAAGTTTGGAAAAACTATTTGAGGAAGTAATTGGGGAAAACCTCTTT
-AGTCTTGCTAGAGATTTAGACATCTAAATGAAAGAGGCTCAAAGAATGCCAGGAAGATAC
-ATTGCAAGACAGACTTCATCAAGATATGTAGTCATCAGACTATCTAAAGTCAACATGAAG
-GAAAAAAATTCTAAAATCAGCAAGAGAAAAGCATACAGTCATCTATAAAGGAAATCCCAT
-CAGAATAACAATGGGCTTCTCAGCAGAAACCTTACAAGCCAGAAGAGATTGGATCTAATT
-TTTGGACTTCTTAAAGAAAAAAAAACCTGTCAAACACGAATGTTATGCCCTGCTAAACTA
-AGCATCATAAATGAAGGGGAAATAAAGTCAAGTCTTTCCTGACAAGCAAATGCTAAGATA
-ATTCATCATCACTAAACCAGTCCTATAAGAAATGCTCAAAAGAATTGTAAAAGTCAAAAT
-TAAAGTTCAATACTCACCATCATAAATACACACAAAAGTACAAAACTCACAGGTTTTATA
-AAACAATTGAGACTACAGAGCAACTAGGTAAAAAATTAACATTACAACAGGAACAAAACC
-TCATATATCAATATTAACTTTGAATAAAAAGGGATTAAATTCCCCCACTTAAGAGATATA
-GATTGGCAGAACAGATTTAAAAACATGAACTAACTATATGCTGTTTACAAGAAACTCATT
-AATAAAGACATGAGTTCAGGTAAAGGGGTGGAAAAAGATGTTCTACGCAAACAGAAACCA
-AATGAGAGAAGGAGTAGCTATACTTATATCAGATAAAGCACACTTTAAATCAACAACAGT
-AAAATAAAACAAAGGAGGTCATCATACAATGATAAAAAGATCAATTCAGCAAGAAGATAT
-AACCATCCTACTAAATACATATGCACCTAACACAAGACTACCCAGATTCATAAAACAAAT
-ACTACTAGACCTAAGAGGGATGAGAAATTACCTAATTGGTACAATGTACAATATTCTGAT
-GATGGTTACACTAAAAGCCCATACTTTACTGCTACTCAATATATCCATGTAACAAATCTG
-CGCTTGTACTTCTAAATCTATAAAAAAATTAAAATTTAACAAAAGTAAATAAAACACATA
-GCTAAAACTAAAAAAGCAAAAACAAAAACTATGCTAAGTATTGGTAAAGATGTGGGGAAA
-AAAGTAAACTCTCAAATATTGCTAGTGGGAGTATAAATTGTTTTCCACTTTGGAAAACAA
-TTTGGTAATTTCGTTTTTTTTTTTTTCTTTTCTCTTTTTTTTTTTTTTTTTTTTGCATGC
-CAGAAAAAAATATTTACAGTAACT
diff --git a/Tool_src/samtools-1.11/examples/ex1.sam.gz b/Tool_src/samtools-1.11/examples/ex1.sam.gz
deleted file mode 100644
index 44c07ee..0000000
Binary files a/Tool_src/samtools-1.11/examples/ex1.sam.gz and /dev/null differ
